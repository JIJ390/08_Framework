<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- 연결할 Mapper 인터페이스 파일 경로 작성 (필수)  -->
<mapper namespace="edu.kh.demo.mapper.TestMapper">
	<!-- 아래 태그는 꼭 삭제!!! -->	
 	<!--  <cache-ref namespace=""/> -->
 	
 	<!-- 
 		** <select> 태그에서 사용할 수 있는 속성 **
 		
 		- parameterType : 전달 받은 값의 자료형
 		- resultType    : 조회된 결과 "행"의 자료형
 		
 		(중요!)
 		자료형 작성 시
 		- 기본 자료형 : mybatis 제공 별칭으로 작성
 		
 		- 참조형(클래스, 사용자 정의) :
 			mybatic 제공 별칭
 			OR 패키지명 + 클래스명
 			OR 사용자 지정 별칭
 	 -->
 	 
 	 <!-- 
 	 	** insert/update/delete(DML) 태그에서 사용할 수 있는 속성 **
 	 	
 		- parameterType : 전달 받은 값의 자료형
 		
 		* resultType 없음! 결과가 무조건 int 
 	  -->
 	
 	
 	<!-- id : 메서드명? -->
 	<!-- 원래 java.lang.String 이라 써야 함 -->
 	<!-- 너무 길어서 별칭 지정되어 있음 -->
 	<!-- pdf 참조 -->
	<!-- 사용자 이름 조회 --> 	
	<select id="selectUserName" 
			parameterType="_int"			
			resultType="string">
	
		SELECT USER_NAME
		FROM TB_USER
		WHERE USER_NO = #{userNo}
	</select>
	
	<!-- 
		마이바티스는 조회된 컬럼명과 
		결과를 담으려는 DTO 필드명이 같을 경우 
		자동으로 값을 담아줄 수 있다!!!
		
		그런데... USER_NO, userNo 이렇게 형태가 달라서
		원래는 자동으로 담을 수 없지만...
		mybatis-config.xml 에 작성된
		mapUnderscoreToCamelCase 때문에 가능해짐
		*카멜표기법과 '_' 연결(매핑)!*
	 -->
	
	<!-- resultType    : 조회된 결과 "행"의 자료형 -->
	<!-- resultType="edu.kh.demo.dto.UserDTO" 또는 별칭 지정 -->
	<select id="selectAll"
			resultType="edu.kh.demo.dto.UserDTO">
		SELECT 
			USER_NO,
			USER_ID,
			USER_PW,
			USER_NAME,
			TO_CHAR(ENROLL_DATE, 'YYYY"년" MM"월" DD"일"') ENROLL_DATE
		FROM TB_USER
		ORDER BY USER_NO ASC
	</select>
	
	
	<!-- USER_NO 이 일치하는 유저 정보 조회 -->
	<!-- resultType 으로 별칭 사용(DBConfig 참고) 서버 켜질째 지정됨 -->
	<select id="selectUser"
			parameterType="_int"
			resultType="UserDTO">
		SELECT 
			USER_NO,
			USER_ID,
			USER_PW,
			USER_NAME,
			TO_CHAR(ENROLL_DATE, 'YYYY"년" MM"월" DD"일"') ENROLL_DATE
		FROM TB_USER
		WHERE USER_NO = #{userNo}
	</select>
	
	
	<!-- 사용자 정보 수정 -->
	<!-- 별칭 사용! 
		전달은 파라미터가 DTO 또는 Map 인 경우
		SQL 에 필드명 또는 key 값을 작성하면 된다
	-->
	<update id="updateUser" 
 			parameterType="UserDTO">
 		UPDATE TB_USER
 		SET
 			USER_PW = #{userPw},
 			USER_NAME = #{userName}
 		WHERE
 			USER_NO = #{userNo}
 	</update>

	<!-- 사용자 삭제 --> 	
 	<delete id="deleteUser"
 			parameterType="_int">
 		DELETE 
 		FROM TB_USER
 		WHERE USER_NO = #{userNo}		
 	</delete>
 	
 	<!-- 사용자 추가 -->
 	<insert id="insertUser"
 			parameterType="UserDTO">
 		INSERT INTO TB_USER  
		VALUES(SEQ_USER_NO.NEXTVAL, #{userId}, #{userPw}, #{userName}, DEFAULT)
 	</insert>
 	
 	
</mapper>
